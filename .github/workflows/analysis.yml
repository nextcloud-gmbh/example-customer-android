name: "Analysis"

on:
    pull_request:
        branches: [ master, stable-* ]
    push:
        branches: [ master, stable-* ]

permissions:
    pull-requests: write
    contents: write

jobs:
    analysis:
        runs-on: ubuntu-latest
        steps:
            -   name: Setup variables
                id: get-vars
                run: |
                    if [ -z "$GITHUB_HEAD_REF" ]; then
                        # push
                        echo "branch=$GITHUB_REF_NAME" >> "$GITHUB_OUTPUT"
                        echo "pr=$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"
                        echo "repo=${{ github.repository }}" >> "$GITHUB_OUTPUT"
                    else
                        # pull request
                        echo "branch=$GITHUB_HEAD_REF" >> "$GITHUB_OUTPUT"
                        echo "pr=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
                        echo "repo=${{ github.event.pull_request.head.repo.full_name }}" >> "$GITHUB_OUTPUT"
                    fi
            -   uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
                with:
                    repository: ${{ steps.get-vars.outputs.repo }}
                    ref: ${{ steps.get-vars.outputs.branch }}
            -   name: Set up JDK 17
                uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
                with:
                    distribution: "temurin"
                    java-version: 17
            -   name: Install dependencies
                run: |
                    python3 -m pip install defusedxml
            -   name: Run analysis wrapper
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    mkdir -p $HOME/.gradle
                    echo "org.gradle.jvmargs=-Xmx2g -XX:MaxMetaspaceSize=512m -XX:+HeapDumpOnOutOfMemoryError" > $HOME/.gradle/gradle.properties
                    scripts/analysis/analysis-wrapper.sh ${{ steps.get-vars.outputs.branch }} ${{ secrets.LOG_USERNAME }} ${{ secrets.LOG_PASSWORD }} $GITHUB_RUN_NUMBER ${{ steps.get-vars.outputs.pr }}
